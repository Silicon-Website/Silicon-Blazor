@using Microsoft.AspNetCore.Identity
@using Frontend.Data
@using Microsoft.EntityFrameworkCore.Metadata.Internal

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@rendermode InteractiveServer

<nav>
    <NavLink class="text-m" href="/account/details">
        <i class="fa-regular fa-gear"></i>Account Details
    </NavLink>

    <NavLink class="text-m" href="/account/notifications">
        <i class="fa-solid fa-arrow-left-from-bracket"></i>Notifications
    </NavLink>

    <NavLink class="text-m" href="/" @onclick="SignOut">
        <i class="fa-solid fa-arrow-left-from-bracket"></i>Sign Out
    </NavLink>
</nav>

@code {
    [Parameter]
    public ApplicationUser user { get; set; } = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;
 


    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }

    async Task SignOut()
    {
        if (SignInManager.IsSignedIn(HttpContext.User))
        {
            await SignInManager.SignOutAsync();
        }
    }
}
